input {
  # stores_store
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11"
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_store WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_store"
  }
  # stores_store_amenities
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_validate_connection => true
    statement => "SELECT * FROM stores_store_amenities "
    type => "waiting_2022_01_11stores_store_amenities"
  }
  # stores_store_tastes
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11"
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_validate_connection => true
    statement => "SELECT * FROM stores_store_tastes"
    type => "waiting_2022_01_11stores_store_tastes"
  }
  # stores_store_themes
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_validate_connection => true
    statement => "SELECT * FROM stores_store_themes"
    type => "waiting_2022_01_11stores_store_themes"
  }
  # stores_storetype
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_storetype WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_storetype"
  }
  # stores_amenity
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_amenity WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_amenity"
  }
  # stores_foodtype
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_foodtype WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_foodtype"
  }
  # stores_theme
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_theme WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_theme"
  }
  # stores_taste
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_taste WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_taste"
  }
  # stores_menu
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/waiting_2022_01_11" # mega_market은 데이터베>$    jdbc_user => "sbsst" # 데이터베이스 아이디
    jdbc_user => "sbsst"
    jdbc_password => "sbs123414" # 데이터베이스 비밀번호
    schedule => "* * * * *"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated) AS unix_ts_in_secs FROM stores_menu WHERE (UNIX_TIMESTAMP(updated) > :sql_last_value AND updated < NOW()) ORDER BY updated ASC"
    type => "waiting_2022_01_11stores_menu"
  }
}

output {
  if [type] == "waiting_2022_01_11stores_store" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_store" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
   }
}
  if [type] == "waiting_2022_01_11stores_store_amenities" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_store_amenities" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_store_tastes" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_store_tastes" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_store_themes" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_store_themes" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_storetype" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_storetype" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_amenity" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_amenity" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_foodtype" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_foodtype" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_theme" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_theme" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_taste" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_taste" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }

 if [type] == "waiting_2022_01_11stores_menu" {
    elasticsearch {
      hosts => "elasticsearch:9200" # 엘라스틱 주소
      user => "elastic" # 엘라스틱 아이디
      password => "elasticpassword" # 엘라스틱 비번
      index => "waiting_2022_01_11__stores_menu" # 엘라스틱 인덱스(테이블) 지정
      document_id => "%{id}"
    }
 }
}